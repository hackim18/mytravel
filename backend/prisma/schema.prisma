generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String          @id @default(cuid())
  name          String
  thumbnail     String?
  description   String?
  location      String
  price         Int
  stockQuantity Int
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  bookmark      Bookmark[]
  likes         Like[]
  orderItems    OrderItem[]
}

model Like {
  id         String    @id @default(cuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  product    Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, productId])
}

model User {
  id          String        @id @default(cuid())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  bookmark    Bookmark[]
  likes       Like[]
  orders      Order[]
}

model Bookmark {
  id         String   @id @default(cuid())
  userId     String
  productId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([userId, productId])
}

model Order {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  status      OrderStatus   @default(PENDING)
  items       OrderItem[]

  @@index([userId])
}

model OrderItem {
  id         String   @id @default(cuid())
  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    String
  product    Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId  String
  quantity   Int
  price      Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([orderId, productId])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}
